[
  {
    "Namespace": "AWS/Firehose",
    "MetricName": "ExecuteProcessing.Success",
    "Statistic": "Minimum",
    "ComparisonOperator": "LessThanThreshold",
    "EvaluationPeriods": 2,
    "Period": 300,
    "Multiplier": 1,
    "Minimum": 0.99,
    "Description": "Alert on 1% failure"
  },
  {
    "Namespace": "AWS/Firehose",
    "MetricName": "ExecuteProcessing.Duration",
    "Statistic": "Maximum",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 2,
    "Period": 300,
    "Multiplier": 1,
    "Minimum": 0.99,
    "Description": "Alert on 1% failure"
  },
  {
    "Namespace": "AWS/Firehose",
    "MetricName": "ThrottledGetShardIterator",
    "Statistic": "Maximum",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 2,
    "Period": 300,
    "Multiplier": 1.1,
    "Minimum": 2,
    "Maximum": 10,
    "Description": "Number of incidents of throttling"
  },
  {
    "Namespace": "AWS/Firehose",
    "MetricName": "KinesisMillisBehindLatest",
    "Statistic": "Maximum",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 2,
    "Period": 300,
    "Multiplier": 1.1,
    "Minimum": 3000,
    "Maximum": 60000,
    "Description": "Not interested in less than 3 seconds delay. We'd want to know if there was a minute delay in kinesis."
  },
  {
    "Namespace": "AWS/Firehose",
    "MetricName": "ExecuteProcessing.Success",
    "Statistic": "Minimum",
    "ComparisonOperator": "LessThanThreshold",
    "EvaluationPeriods": 2,
    "Period": 300,
    "Multiplier": 1,
    "Minimum": 0.99,
    "Description": "Alert on 1% failure"
  },
  {
    "Namespace": "AWS/Firehose",
    "MetricName": "ExecuteProcessing.Duration",
    "Statistic": "Maximum",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 2,
    "Period": 300,
    "Multiplier": 1,
    "Minimum": 0.99,
    "Description": "Alert on 1% failure"
  },
  {
    "Namespace": "AWS/Firehose",
    "MetricName": "ThrottledGetShardIterator",
    "Statistic": "Maximum",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 2,
    "Period": 300,
    "Multiplier": 1.1,
    "Minimum": 2,
    "Maximum": 10,
    "Description": "Number of incidents of throttling"
  },
  {
    "Namespace": "AWS/Firehose",
    "MetricName": "KinesisMillisBehindLatest",
    "Statistic": "Maximum",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 2,
    "Period": 300,
    "Multiplier": 1.1,
    "Minimum": 3000,
    "Maximum": 60000,
    "Description": "Not interested in less than 3 seconds delay. We'd want to know if there was a minute delay in kinesis."
  },
  {
    "Namespace": "AWS/Firehose",
    "MetricName": "BackupToS3.Bytes",
    "Statistic": "Average",
    "ComparisonOperator": "LessThanThreshold",
    "EvaluationPeriods": 2,
    "Period": 300,
    "Multiplier": 1.1,
    "Minimum": 5000000,
    "Description": "Alert if backup to s3 bytes drops below 5MB"
  },
  {
    "Namespace": "AWS/Firehose",
    "MetricName": "BackupToS3.DataFreshness",
    "Statistic": "Average",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 2,
    "Period": 300,
    "Multiplier": 1.1,
    "Minimum": 460,
    "Description": "Age (from getting into Kinesis Data Firehose to now) of the oldest record in Kinesis Data Firehose. Any record older than this age has been delivered to the Amazon S3 bucket for backup. Kinesis Data Firehose emits this metric when backup to Amazon S3 is enabled"
  },
  {
    "Namespace": "AWS/Firehose",
    "MetricName": "BackupToS3.Records",
    "Statistic": "Minimum",
    "ComparisonOperator": "LessThanThreshold",
    "EvaluationPeriods": 2,
    "Period": 300,
    "Multiplier": 1,
    "Minimum": 12000,
    "Description": "The number of records delivered to Amazon S3 for backup over the specified time period. Kinesis Data Firehose emits this metric when backup to Amazon S3 is enabled"
  },
  {
    "Namespace": "AWS/Firehose",
    "MetricName": "BackupToS3.Success",
    "Statistic": "Minimum",
    "ComparisonOperator": "LessThanThreshold",
    "EvaluationPeriods": 1,
    "Period": 300,
    "Multiplier": 1,
    "Minimum": 0.99,
    "Description": "Sum of successful Amazon S3 put commands for backup over sum of all Amazon S3 backup put commands. Kinesis Data Firehose emits this metric when backup to Amazon S3 is enabled"
  },
  {
    "Namespace": "AWS/Firehose",
    "MetricName": "DataReadFromKinesisStream.Bytes",
    "Statistic": "Maximum",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 2,
    "Period": 300,
    "Multiplier": 1,
    "Minimum": 18000,
    "Maximum": 180000,
    "Description": "When the data source is a Kinesis data stream, this metric indicates the number of bytes read from that data stream. This number includes rereads due to failovers."
  },
  {
    "Namespace": "AWS/Firehose",
    "MetricName": "DataReadFromKinesisStream.Records",
    "Statistic": "Maximum",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 2,
    "Period": 300,
    "Multiplier": 1,
    "Minimum": 20,
    "Maximum": 500,
    "Description": "When the data source is a Kinesis data stream, this metric indicates the number of records read from that data stream. This number includes rereads due to failovers."
  },
  {
    "Namespace": "AWS/Firehose",
    "MetricName": "DeliveryToSplunk.Success",
    "Statistic": "Minimum",
    "ComparisonOperator": "LessThanThreshold",
    "EvaluationPeriods": 1,
    "Period": 300,
    "Multiplier": 1,
    "Minimum": 1,
    "Description": "Alert if count goes below 1"
  },
  {
    "Namespace": "AWS/Firehose",
    "MetricName": "DeliveryToSplunk.Bytes",
    "Statistic": "Minimum",
    "ComparisonOperator": "LessThanThreshold",
    "EvaluationPeriods": 2,
    "Period": 300,
    "Multiplier": 1,
    "Minimum": 600000,
    "Description": "The number of bytes delivered to Splunk over the specified time period"
  },
  {
    "Namespace": "AWS/Firehose",
    "MetricName": "DeliveryToSplunk.DataAckLatency",
    "Statistic": "Maximum",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 2,
    "Period": 300,
    "Multiplier": 1,
    "Minimum": 50,
    "Maximum": 95,
    "Description": "The approximate duration (seconds) it takes to receive an acknowledgement from Splunk after Kinesis Data Firehose sends it data. The increasing or decreasing trend for this metric is more useful than the absolute approximate value. Increasing trends can indicate slower indexing and acknowledgement rates from Splunk indexers."
  },
  {
    "Namespace": "AWS/Firehose",
    "MetricName": "DeliveryToSplunk.DataFreshness",
    "Statistic": "Maximum",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 2,
    "Period": 300,
    "Multiplier": 1,
    "Minimum": 30,
    "Maximum": 180,
    "Description": "Age in seconds (from getting into Kinesis Data Firehose to now) of the oldest record in Kinesis Data Firehose. Any record older than this age has been delivered to Splunk"
  },
  {
    "Namespace": "AWS/Kinesis",
    "MetricName": "GetRecords.Success",
    "Statistic": "Minimum",
    "ComparisonOperator": "LessThanThreshold",
    "EvaluationPeriods": 2,
    "Period": 300,
    "Multiplier": 1,
    "Minimum": 0.99,
    "Description": "Alert on 1% failure"
  },
  {
    "Namespace": "AWS/Kinesis",
    "MetricName": "PutRecord.Success",
    "Statistic": "Minimum",
    "ComparisonOperator": "LessThanThreshold",
    "EvaluationPeriods": 2,
    "Period": 900,
    "Multiplier": 1,
    "Minimum": 0.99,
    "Description": "Alert on 1% failure"
  },
  {
    "Namespace": "AWS/Kinesis",
    "MetricName": "GetRecords.IteratorAgeMilliseconds",
    "Statistic": "Maximum",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 2,
    "Period": 300,
    "Multiplier": 1.1,
    "Minimum": 5000,
    "Maximum": 1800000,
    "Description": "Maximum 1/2 an hour"
  },
  {
    "Namespace": "AWS/Kinesis",
    "MetricName": "GetRecords.Success",
    "Statistic": "Minimum",
    "ComparisonOperator": "LessThanThreshold",
    "EvaluationPeriods": 2,
    "Period": 300,
    "Multiplier": 1,
    "Minimum": 0.99,
    "Description": "Alert on 1% failure"
  },
  {
    "Namespace": "AWS/Kinesis",
    "MetricName": "PutRecord.Success",
    "Statistic": "Minimum",
    "ComparisonOperator": "LessThanThreshold",
    "EvaluationPeriods": 2,
    "Period": 900,
    "Multiplier": 1,
    "Minimum": 0.99,
    "Description": "Alert on 1% failure"
  },
  {
    "Namespace": "AWS/Kinesis",
    "MetricName": "GetRecords.IteratorAgeMilliseconds",
    "Statistic": "Maximum",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 2,
    "Period": 300,
    "Multiplier": 1.1,
    "Minimum": 5000,
    "Maximum": 1800000,
    "Description": "Maximum 1/2 an hour"
  },
  {
    "Namespace": "AWS/Lambda",
    "MetricName": "Errors",
    "Statistic": "Maximum",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 2,
    "Period": 300,
    "Multiplier": 1.1,
    "Minimum": 10,
    "Maximum": 200,
    "Description": "We probably don't want to know the first few times a lambda errors. We definitely want to know if it errors frequently."
  },
  {
    "Namespace": "AWS/Lambda",
    "MetricName": "Duration",
    "Statistic": "Maximum",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 2,
    "Period": 300,
    "Multiplier": 1.1,
    "Minimum": 3000,
    "Description": "Any lambda running for less than 3 secs should be fine. The maximum is calculated based on the lambda's timeout. This is measured in milliseconds (I think that has changed)."
  },
  {
    "Namespace": "AWS/Lambda",
    "MetricName": "ConcurrentExecutions",
    "Statistic": "Maximum",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 2,
    "Period": 300,
    "Multiplier": 1.1,
    "Minimum": 1,
    "Maximum": 1000,
    "Description": "The number of function instances that are processing events. If the number reaches the maximum for a region, Lambda throttles additional invocation requests. This can be increased to tens of thousands by raising an AWS support request."
  },
  {
    "Namespace": "AWS/Lambda",
    "MetricName": "Errors",
    "Statistic": "Maximum",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 2,
    "Period": 300,
    "Multiplier": 1.1,
    "Minimum": 10,
    "Maximum": 200,
    "Description": "We probably don't want to know the first few times a lambda errors. We definitely want to know if it errors frequently."
  },
  {
    "Namespace": "AWS/Lambda",
    "MetricName": "Duration",
    "Statistic": "Maximum",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 2,
    "Period": 300,
    "Multiplier": 1.1,
    "Minimum": 3000,
    "Description": "Any lambda running for less than 3 secs should be fine. The maximum is calculated based on the lambda's timeout. This is measured in milliseconds (I think that has changed)."
  },
  {
    "Namespace": "AWS/Lambda",
    "MetricName": "ConcurrentExecutions",
    "Statistic": "Maximum",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 2,
    "Period": 300,
    "Multiplier": 1.1,
    "Minimum": 1,
    "Maximum": 1000,
    "Description": "The number of function instances that are processing events. If the number reaches the maximum for a region, Lambda throttles additional invocation requests. This can be increased to tens of thousands by raising an AWS support request."
  },
  {
    "Namespace": "AWS/SQS",
    "MetricName": "ApproximateAgeOfOldestMessage",
    "Statistic": "Maximum",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 2,
    "Period": 300,
    "Multiplier": 1.1,
    "Minimum": 2,
    "Maximum": 300,
    "Description": "This is an initial guess to be tuned later"
  },
  {
    "Namespace": "AWS/SQS",
    "MetricName": "ApproximateNumberOfMessagesVisible",
    "Statistic": "Maximum",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 2,
    "Period": 300,
    "Multiplier": 1.1,
    "Minimum": 500,
    "Maximum": 5000,
    "Description": "This is an initial guess to be tuned later"
  },
  {
    "Namespace": "AWS/SQS",
    "MetricName": "ApproximateNumberOfMessagesNotVisible",
    "Statistic": "Maximum",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 2,
    "Period": 300,
    "Multiplier": 1.1,
    "Minimum": 500,
    "Maximum": 5000,
    "Description": "This is an initial guess to be tuned later"
  },
  {
    "Namespace": "AWS/SQS",
    "MetricName": "ApproximateAgeOfOldestMessage",
    "Statistic": "Maximum",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 2,
    "Period": 300,
    "Multiplier": 1.1,
    "Minimum": 2,
    "Maximum": 300,
    "Description": "This is an initial guess to be tuned later"
  },
  {
    "Namespace": "AWS/SQS",
    "MetricName": "ApproximateNumberOfMessagesVisible",
    "Statistic": "Maximum",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 2,
    "Period": 300,
    "Multiplier": 1.1,
    "Minimum": 500,
    "Maximum": 5000,
    "Description": "This is an initial guess to be tuned later"
  },
  {
    "Namespace": "AWS/SQS",
    "MetricName": "ApproximateNumberOfMessagesNotVisible",
    "Statistic": "Maximum",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 2,
    "Period": 300,
    "Multiplier": 1.1,
    "Minimum": 500,
    "Maximum": 5000,
    "Description": "This is an initial guess to be tuned later"
  }
]