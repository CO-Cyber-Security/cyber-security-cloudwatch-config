---
resources:
  - name: cyber-security-cloudwatch-config-git
    icon: github-circle
    type: git
    source:
      uri: https://github.com/alphagov/cyber-security-cloudwatch-config
      branch: concourse-pipeline

  - name: cyber-security-terraform-git
    icon: github-circle
    type: git
    source:
      uri: git@github.com:alphagov/cyber-security-terraform.git
      branch: master
      private_key: ((cyber-security-terraform-deploy-key))
      paths:
        - service/cloudwatch-config/*

blocks:
  - config: &cloudwatch_build

      platform: linux

      image_resource:
        type: docker-image
        source:
            repository: gdscyber/concourse-worker-health
            tag: '1.2.8'

      inputs:
        - name: cyber-security-cloudwatch-config-git

jobs:
  - name: cloudwatch_test
    plan:
      - get: cyber-security-cloudwatch-config-git
        trigger: true

      - task: test
        config:
          <<: *cloudwatch_build
          run:
            path: /bin/bash
            args:
              - |
                cd lambda/health_package
                make test
                echo "Tests completed"
            dir: cyber-security-cloudwatch-config-git

  - name: cloudwatch_staging_deploy
    plan:
      - get: cyber-security-cloudwatch-config-git
        trigger: true
        passed:
          - cloudwatch_test
      - get: cyber-security-terraform-git
        trigger: false
      - task: zip
        config:
          <<: *cloudwatch_build
          outputs:
          - name: lambda_package
          run:
            path: /bin/bash
            args:
              - -exc
              - |
                cd lambda/health_package
                make zip
                mv health_package.zip ../../../lambda_package
                echo "Built zip file lambda distribution"
                ls ../../..
            dir: cyber-security-cloudwatch-config-git

      - task: create_alarm_config
        config:
          <<: *cloudwatch_build
          inputs:
            - name: cyber-security-cloudwatch-config-git
            - name: cyber-security-terraform-git
          outputs:
            - name: deployments
          run:
            path: /bin/bash
            args:
              - -exc
              - |
                env

                cd ..
                workdir=$(pwd)
                ln -fs ${workdir}/deployments ${workdir}/cyber-security-cloudwatch-config-git/terraform/per_account
                cd cyber-security-cloudwatch-config-git

                monitored_accounts=$(ls ../cyber-security-terraform-git/service/cloudwatch-config/per_account/deployments)

                for account_id in $monitored_accounts; do
                 echo "Test assume role"
                 target_arn="arn:aws:iam::${account_id}:role/HealthConcourseWorkerRole"
                 source sts-assume-role.sh $target_arn
                 source sts-get-caller-identity.sh

                 if [[ $account_id == $AWS_ASSUMED_ACCOUNT_ID ]]; then
                  echo $AWS_ASSUMED_ACCOUNT_ID
                  echo $AWS_ASSUMED_ROLE_ARN

                  cd lambda/health_package
                  make run
                  cd ../..
                 else
                  echo "FAILED TO ASSUME ${account_id}"
                 fi
                done


            dir: cyber-security-cloudwatch-config-git

      - task: deploy_terraform
        config:
          <<: *cloudwatch_build
          inputs:
            - name: cyber-security-cloudwatch-config-git
            - name: cyber-security-terraform-git
            - name: lambda_package
            - name: deployments
          run:
            path: /bin/bash
            args:
              - -exc
              - |
                cd ../lambda_package
                ls *.zip
                cd ../deployments
                ls *.tfvars
                cd ../cyber-security-terraform-git
                ls
            dir: cyber-security-cloudwatch-config-git