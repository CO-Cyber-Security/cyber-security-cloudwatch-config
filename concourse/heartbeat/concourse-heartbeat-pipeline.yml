---
groups:
- name: concourse-heartbeat
  jobs:
  - concourse-heartbeat-pass

heartbeat_image_resource: &heartbeat_image_resource
  type: docker-image
  source:
    repository: gdscyber/cyber-security-concourse-base-image

health_status_notify: &health_status_notify
  put: health-notification

heartbeat_pass_task: &heartbeat_pass_task
  platform: linux
  image_resource: *heartbeat_image_resource
  run:
    path: sh
    args:
    - -eu
    - -c
    - |
      set -x
      echo "Testing concourse reporting: success"

resource_types:
  - name: http-api
    type: docker-image
    source:
      repository: gdscyber/http-api-resource
      tag: 1.0a

resources:
  - name: once_per_day
    type: time
    source: {interval: 24h}

  - name: health-notification
    type: http-api
    source:
      uri: https://((health_host_prod))/?alert_type=concourse$&alert_name=health
      method: POST
      headers:
        Authorization: "Bearer ((health_token_prod))"
      json:
        service: "{service}"
        state: "{health}"
        message: "{message}"
        pipeline: "{BUILD_PIPELINE_NAME}"
        job: "{BUILD_JOB_NAME}"
        build_number: "{BUILD_NAME}"
      service: "Concourse"


jobs:
- name: concourse-heartbeat-pass
  plan:
  - get: once_per_day
    trigger: true
  - task: heartbeat
    config:
      <<: *heartbeat_pass_task

    on_success:
      <<: *health_status_notify
      params:
        message: "Pipeline completed successfully"
        health: healthy

    on_failure:
      <<: *health_status_notify
      params:
        message: "Pipeline failed"
        health: unhealthy
