---
groups:
- name: concourse-heartbeat
  jobs:
  - concourse-heartbeat-fail
  - concourse-heartbeat-pass

heartbeat_image_resource: &heartbeat_image_resource
  type: docker-image
  source:
    repository: ubuntu
    tag: '18.04'

success_notify: &success_notify
  put: health-notification
  params:
    health: healthy
    message: Pipeline completed succesfully
    context: "Should pass"
    invert: False

failure_notify: &failure_notify
  put: health-notification
  params:
    health: unhealthy
    message: Pipeline failed
    context: "Should pass"
    invert: False

heartbeat_pass_task: &heartbeat_pass_task
  platform: linux
  image_resource: *heartbeat_image_resource
  run:
    path: sh
    args:
    - -eu
    - -c
    - |
      set -x
      echo "Testing concourse reporting: success"

heartbeat_fail_task: &heartbeat_fail_task
  platform: linux
  image_resource: *heartbeat_image_resource
  run:
    path: sh
    args:
    - -eu
    - -c
    - |
      set -x
      echo "Testing concourse reporting: failure"
      exit(1)

resource_types:
  - name: http-api
    type: docker-image
    source:
      repository: aequitas/http-api-resource
      tag: latest

resources:
  - name: every_hour
    type: time
    source: {interval: 1h}

  - name: health-notification
    type: http-api
    source:
      uri: https://((health_host_test))/?alert_type=concourse$&alert_name=health
      method: POST
      headers:
        Authorization: "Bearer ((health_token_test))"
      json:
        context: "{context}"
        state: "{health}"
        invert: "{invert}"
        message: "{message}"
        pipeline: "{BUILD_PIPELINE_NAME}"
        job: "{BUILD_JOB_NAME}"
        build_number: "{BUILD_NAME}"


jobs:
- name: concourse-heartbeat-pass
  plan:
  - get: every_hour
    trigger: true
  - task: heartbeat
    config:
      <<: *heartbeat_pass_task
      params:
        ENVIRONMENT: "test"
        CONTEXT: "Should pass"

    on_success:
      <<: *success_notify
      params:
        health: healthy
        message: Pipeline completed succesfully
        context: "Should pass"
        invert: False

    on_failure:
      <<: *failure_notify
      params:
        health: unhealthy
        message: Pipeline failed
        context: "Should pass"
        invert: False

- name: concourse-heartbeat-fail
  plan:
  - get: every_hour
    trigger: true
  - task: heartbeat
    config:
      <<: *heartbeat_fail_task
      params:
        ENVIRONMENT: "test"
        CONTEXT: "Should fail"

    on_success:
      <<: *success_notify
      params:
        health: healthy
        message: Pipeline completed succesfully
        context: "Should fail"
        invert: True

    on_failure:
      <<: *failure_notify
      params:
        health: unhealthy
        message: Pipeline failed
        context: "Should fail"
        invert: True

